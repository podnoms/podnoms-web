server {
	listen 80;
    server_name rss.podnoms.com;
    location / {
        proxy_pass http://api:5000/rss/;
    }
}
server {
	listen 80;
    listen 443 default ssl;

    server_name podnoms.com www.podnoms.com dev.podnoms.com;
    root /usr/share/nginx/html;

    #remove this because it screws with rss domains
    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
	ssl_certificate     /etc/letsencrypt/live/podnoms.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/podnoms.com/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

	if ($ssl_protocol = "") {
		rewrite ^((?!/rss/).)  https://$server_name$request_uri? permanent;
	}
    location /assets/ {
        alias /usr/share/nginx/html/;
    }
    location /rss/ {
        client_max_body_size 30000M;
        proxy_pass http://api:5000/rss/;
    }
    location / {
        try_files $uri$args $uri$args/ /index.html;
    }
    location = /api {
        return 302 /api/;
    }
    location /api/ {
        client_max_body_size 30000M;
        proxy_pass http://api:5000/;
    }
}

server {
    listen 80;
    listen 443 ssl;

    server_name rt.podnoms.com;

	ssl_certificate     /etc/letsencrypt/live/rt.podnoms.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/rt.podnoms.com/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

	if ($ssl_protocol = "") {
		rewrite ^((?!/rss/).)  https://$server_name$request_uri? permanent;
	}

    location / {
        proxy_pass http://api:5000/;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
server {
    listen 80;
    listen 443 ssl;

    server_name jobs.podnoms.com;

	ssl_certificate     /etc/letsencrypt/live/jobs.podnoms.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/jobs.podnoms.com/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    location / {
        proxy_pass http://api:5000/hangfire;
    }
}

